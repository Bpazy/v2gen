name: Go
on:
  push:
    tags:
      - 'V*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Set variables
        run: |
          mkdir go release build
          echo "::set-env name=REPO_URL::github.com/iochen/v2gen"
          echo "::set-env name=GOPATH::$(pwd)/go"
        shell: bash

      - name: Go get project code
        run: |
          go get -u -v -insecure ${REPO_URL}/...

      - name: Build v2gen
        run: |
          LDFLAGS="-s -w"
          CMDPATH=./go/src/github.com/iochen/v2gen/cmd/
          GOOS=linux GOARCH=amd64 go build -ldflags="${LDFLAGS}" -v -o ./build/v2gen_amd64_linux ${CMDPATH}

      - uses: actions-github/upx@master
        with:
          file: './build'
          upx_args: '-9'

      - name: Package v2gen
        run: |
          zip ./release/v2gen_amd64_linux.zip ./build/v2gen_amd64_linux

      - name: Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload dat file
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./release/v2gen_amd64_linux.zip
          asset_name: v2gen_amd64_linux.zip
          asset_content_type: application/zip